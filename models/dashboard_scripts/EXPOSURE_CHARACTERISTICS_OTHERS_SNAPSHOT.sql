{{ config(materialized='table') }}

	SELECT 
		SNAPSHOT_DATE,
		POLICY_LOCATOR,
		EXPOSURE_LOCATOR,
		EXPOSURE_CHARACTERISTICS_LOCATOR,
		COALESCE(MANUFACTURED_HOME_LIMIT,0)                                                         as MANUFACTURED_HOME_LIMIT,
		COALESCE(OTHER_STRUCTURES_LIMIT,0)                                                          as OTHER_STRUCTURES_LIMIT,
		COALESCE(UNSCHEDULED_PERSONAL_PROPERTY_LIMIT,0)                                             as UNSCHEDULED_PERSONAL_PROPERTY_LIMIT,
		COALESCE(LOSS_OF_USE_PERCENTAGE,0) 															as LOSS_OF_USE_PERCENTAGE,
		COALESCE(PERSONAL_LIABILITY,'No')                                                           as PERSONAL_LIABILITY,
		COALESCE(PREMISES_LIABILITY_LIMIT,'No')                                                     as PREMISES_LIABILITY_LIMIT,
		COALESCE(COV_A_SETTLEMENT_OPTION,'No')                                                      as COV_A_SETTLEMENT_OPTION,
		COALESCE(COV_B_SETTLEMENT_OPTION,'No')                                                      as COV_B_SETTLEMENT_OPTION,
		COALESCE(COV_C_SETTLEMENT_OPTION,'No')                                                      as COV_C_SETTLEMENT_OPTION,
		COALESCE(ALL_OTHER_PERILS_DEDUCTIBLE,'No')                                                  as ALL_OTHER_PERILS_DEDUCTIBLE,
		COALESCE(WIND_HAIL_DEDUCTIBLE,'No')                                                         as WIND_HAIL_DEDUCTIBLE,
		COALESCE(EARTHQUAKE_DEDUCTIBLE,'No')                                                        as EARTHQUAKE_DEDUCTIBLE,
		COALESCE(ANIMAL_LIABILITY_LIMIT,'No')                                                       as ANIMAL_LIABILITY_LIMIT,
		COALESCE(DEBRIS_REMOVAL_LIMIT,250)                                                         as DEBRIS_REMOVAL_LIMIT,
		COALESCE(EQUIPMENT_BREAKDOWN_LIMIT,'No')                                                    as EQUIPMENT_BREAKDOWN_LIMIT,
		COALESCE(FUNGI_BACTERIA_PROPERTY_LIMIT,'No')                                                as FUNGI_BACTERIA_PROPERTY_LIMIT,
		COALESCE(RESIDENCE_BURGLARY_LIMIT,'No')                                                     as RESIDENCE_BURGLARY_LIMIT,
		COALESCE(WATER_BACKUP_AND_SUMP_OVERFLOW_LIMIT,'No')                                         as WATER_BACKUP_AND_SUMP_OVERFLOW_LIMIT,
		COALESCE(WATER_DAMAGE_REDUCED_LIMIT,'No')                                                   as WATER_DAMAGE_REDUCED_LIMIT,
		COALESCE(NO_OF_GOLF_CARTS,0)                                                                as NO_OF_GOLF_CARTS,
		COALESCE(IDENTITY_FRAUD_LIMIT,'No')                                                         as IDENTITY_FRAUD_LIMIT,
		COALESCE(MEDICAL_PAYMENT_TO_OTHERS_LIMIT_PERPERSON,'No')                                    as MEDICAL_PAYMENT_TO_OTHERS_LIMIT_PERPERSON,
		COALESCE(OCCASIONAL_VACATION_RENTAL,'No')                                                   as OCCASIONAL_VACATION_RENTAL,
		COALESCE(SPP_TYPE1,'No')                                                                    as SPP_TYPE1,
		COALESCE(SPP_TYPE2,'No')                                                                    as SPP_TYPE2,
		COALESCE(SPP_TYPE3,'No')                                                                    as SPP_TYPE3,
		COALESCE(SPP_TYPE4,'No')                                                                    as SPP_TYPE4,
		COALESCE(SPP_TYPE5,'No')                                                                    as SPP_TYPE5,
		COALESCE(SPP_TYPE6,'No')                                                                    as SPP_TYPE6,
		COALESCE(SPP_TYPE7,'No')                                                                    as SPP_TYPE7,
		COALESCE(SPP_TYPE8,'No')                                                                    as SPP_TYPE8,
		COALESCE(SPP_TYPE9,'No')                                                                    as SPP_TYPE9,
		COALESCE(SPP_TYPE10,'No')                                                                   as SPP_TYPE10,
		COALESCE(SPP_LIMIT1,0)                                                                      as SPP_LIMIT1,
		COALESCE(SPP_LIMIT2,0)                                                                      as SPP_LIMIT2,
		COALESCE(SPP_LIMIT3,0)                                                                      as SPP_LIMIT3,
		COALESCE(SPP_LIMIT4,0)                                                                      as SPP_LIMIT4,
		COALESCE(SPP_LIMIT5,0)                                                                      as SPP_LIMIT5,
		COALESCE(SPP_LIMIT6,0)                                                                      as SPP_LIMIT6,
		COALESCE(SPP_LIMIT7,0)                                                                      as SPP_LIMIT7,
		COALESCE(SPP_LIMIT8,0)                                                                      as SPP_LIMIT8,
		COALESCE(SPP_LIMIT9,0)                                                                      as SPP_LIMIT9,
		COALESCE(SPP_LIMIT10,0)                                                                     as SPP_LIMIT10,
		SECONDARY_RESIDENCE_COUNT										                            as SECONDARY_RESIDENCE_COUNT,
		CASE WHEN ENHANCED_COVERAGE = 1 THEN 'Yes' else 'No' END                                    as ENHANCED_COVERAGE,
		CASE WHEN HOBBY_FARMING = 1 THEN 'Yes' else 'No' END             				            as HOBBY_FARMING,
		CASE WHEN SPECIFIC_BUILDING_EXCLUSION = 1 THEN 'Yes' else 'No' END                          as SPECIFIC_BUILDING_EXCLUSION,
		CASE WHEN VANDALISM_MALICIOUS_MISCHIEF = 1 THEN 'Yes' else 'No' END                         as VANDALISM_MALICIOUS_MISCHIEF,
		CASE WHEN BUILDERS_RISK = 1 THEN 'Yes' else 'No' END                                        as BUILDERS_RISK,
		CASE WHEN THEFT_LIMITATION = 1 THEN 'Yes' else 'No' END                                     as THEFT_LIMITATION,
		CASE WHEN LANDLORD_PERSONAL_INJURY = 1 THEN 'Yes' else 'No' END                             as LANDLORD_PERSONAL_INJURY,
		CASE WHEN LOSS_ASSESSMENT = 1 THEN 'Yes' else 'No' END                                      as LOSS_ASSESSMENT,
		CASE WHEN TRIP_COLLISION = 1 THEN 'Yes' else 'No' END                                       as TRIP_COLLISION,
		CASE WHEN ROOF_EXCLUSION = 1 THEN 'Yes' else 'No' END                                       as ROOF_EXCLUSION,
		CASE WHEN FORTIFIED_ROOF_UPGRADE = 1 THEN 'Yes' else 'No' END                               as FORTIFIED_ROOF_UPGRADE,
		CASE WHEN WIND_HAIL_EXCLUSION = 1 THEN 'Yes' else 'No' END                                  as WIND_HAIL_EXCLUSION,
		CASE WHEN MINE_SUBSIDENCE_OHIO = 1 THEN 'Yes' else 'No' END                                 as MINE_SUBSIDENCE_OHIO,
		CASE WHEN MINE_SUBSIDENCE_INDIANA_DWELLING = 1 THEN 'Yes' else 'No' END                     as MINE_SUBSIDENCE_INDIANA_DWELLING,
		CASE WHEN MINE_SUBSIDENCE_INDIANA_OTHER_STRUCTURES = 1 THEN 'Yes' else 'No' END             as MINE_SUBSIDENCE_INDIANA_OTHER_STRUCTURES,
		CASE WHEN MINE_SUBSIDENCE_INDIANA_ADDITIONAL_LIVING_EXPENSE = 1 THEN 'Yes' else 'No' END    as MINE_SUBSIDENCE_INDIANA_ADDITIONAL_LIVING_EXPENSE,
		CASE WHEN MINE_SUBSIDENCE_ILLINOIS_DWELLING = 1 THEN 'Yes' else 'No' END                    as MINE_SUBSIDENCE_ILLINOIS_DWELLING,
		CASE WHEN MINE_SUBSIDENCE_ILLINOIS_OTHER_STRUCTURES = 1 THEN 'Yes' else 'No' END            as MINE_SUBSIDENCE_ILLINOIS_OTHER_STRUCTURES
	FROM (
		SELECT 
			CURRENT_DATE AS SNAPSHOT_DATE,
			a.POLICY_LOCATOR,
--			a.EXPOSURE_LOCATOR,
--			a.EXPOSURE_CHARACTERISTICS_LOCATOR,
			CASE 
				WHEN ECFF.UNIT_ID IS NULL THEN ex_locator_unit1
				ELSE a.EXPOSURE_LOCATOR
			END AS EXPOSURE_LOCATOR,
			CASE 
				WHEN ECFF.UNIT_ID IS NULL THEN EXPOSURE_CHARACTERISTICS_LOCATOR_unit1
				ELSE a.EXPOSURE_CHARACTERISTICS_LOCATOR		
			END AS EXPOSURE_CHARACTERISTICS_LOCATOR,
			MAX(MANUFACTURED_HOME_LIMIT) AS MANUFACTURED_HOME_LIMIT,
			max(OTHER_STRUCTURES_LIMIT) AS OTHER_STRUCTURES_LIMIT,
			max(UNSCHEDULED_PERSONAL_PROPERTY_LIMIT) AS UNSCHEDULED_PERSONAL_PROPERTY_LIMIT,
			max(LOSS_OF_USE_PERCENTAGE)/100 AS LOSS_OF_USE_PERCENTAGE,
			max(PERSONAL_LIABILITY) AS PERSONAL_LIABILITY,
			max(PREMISES_LIABILITY_LIMIT) AS PREMISES_LIABILITY_LIMIT,
			max(COV_A_SETTLEMENT_OPTION) AS COV_A_SETTLEMENT_OPTION,
			max(COV_B_SETTLEMENT_OPTION) AS COV_B_SETTLEMENT_OPTION,
			max(COV_C_SETTLEMENT_OPTION) AS COV_C_SETTLEMENT_OPTION,
			max(ALL_OTHER_PERILS_DEDUCTIBLE) AS ALL_OTHER_PERILS_DEDUCTIBLE,
			max(WIND_HAIL_DEDUCTIBLE) AS WIND_HAIL_DEDUCTIBLE,
			max(EARTHQUAKE_DEDUCTIBLE) AS EARTHQUAKE_DEDUCTIBLE,
			max(ANIMAL_LIABILITY_LIMIT) AS ANIMAL_LIABILITY_LIMIT,
			max(DEBRIS_REMOVAL_LIMIT) AS DEBRIS_REMOVAL_LIMIT,
			max(EQUIPMENT_BREAKDOWN_LIMIT) AS EQUIPMENT_BREAKDOWN_LIMIT,
			max(FUNGI_BACTERIA_PROPERTY_LIMIT) AS FUNGI_BACTERIA_PROPERTY_LIMIT,
			max(RESIDENCE_BURGLARY_LIMIT) AS RESIDENCE_BURGLARY_LIMIT,
			max(WATER_BACKUP_AND_SUMP_OVERFLOW_LIMIT) AS WATER_BACKUP_AND_SUMP_OVERFLOW_LIMIT,
			max(WATER_DAMAGE_REDUCED_LIMIT) AS WATER_DAMAGE_REDUCED_LIMIT, 
			max(NO_OF_GOLF_CARTS) AS NO_OF_GOLF_CARTS,
			max(IDENTITY_FRAUD_LIMIT) AS IDENTITY_FRAUD_LIMIT,
			max(MEDICAL_PAYMENT_TO_OTHERS_LIMIT_PERPERSON) AS MEDICAL_PAYMENT_TO_OTHERS_LIMIT_PERPERSON,
			max(OCCASIONAL_VACATION_RENTAL) AS OCCASIONAL_VACATION_RENTAL,
			max(SPP_TYPE1) AS SPP_TYPE1,
			max(SPP_TYPE2) AS SPP_TYPE2,
			max(SPP_TYPE3) AS SPP_TYPE3,
			max(SPP_TYPE4) AS SPP_TYPE4,
			max(SPP_TYPE5) AS SPP_TYPE5,
			max(SPP_TYPE6) AS SPP_TYPE6,
			max(SPP_TYPE7) AS SPP_TYPE7,
			max(SPP_TYPE8) AS SPP_TYPE8,
			max(SPP_TYPE9) AS SPP_TYPE9,
			max(SPP_TYPE10) AS SPP_TYPE10,
			max(SPP_LIMIT1) AS SPP_LIMIT1,
			max(SPP_LIMIT2) AS SPP_LIMIT2,
			max(SPP_LIMIT3) AS SPP_LIMIT3,
			max(SPP_LIMIT4) AS SPP_LIMIT4,
			max(SPP_LIMIT5) AS SPP_LIMIT5,
			max(SPP_LIMIT6) AS SPP_LIMIT6,
			max(SPP_LIMIT7) AS SPP_LIMIT7,
			max(SPP_LIMIT8) AS SPP_LIMIT8,
			max(SPP_LIMIT9) AS SPP_LIMIT9,
			max(SPP_LIMIT10) AS SPP_LIMIT10,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Secondary Residence Liability' THEN a.SECONDARY_RESIDENCE_LIABILITY_ADDRESS ELSE NULL END) AS SECONDARY_RESIDENCE_COUNT,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Enhanced Coverage' THEN 1 ELSE NULL END) AS ENHANCED_COVERAGE,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Hobby - Incidental Farming' THEN 1 ELSE NULL END) AS HOBBY_FARMING,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Specific Building - Structure Exclusion' THEN 1 ELSE NULL END) AS SPECIFIC_BUILDING_EXCLUSION,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Vandalism or Malicious Mischief' THEN 1 ELSE NULL END) AS VANDALISM_MALICIOUS_MISCHIEF,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Builder''s Risk' THEN 1 ELSE NULL END) AS BUILDERS_RISK,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Theft Limitation' THEN 1 ELSE NULL END) AS THEFT_LIMITATION,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Landlord Personal Injury' THEN 1 ELSE NULL END) AS LANDLORD_PERSONAL_INJURY,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Loss Assessment' THEN 1 ELSE NULL END) AS LOSS_ASSESSMENT,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Trip Collision' THEN 1 ELSE NULL END) AS TRIP_COLLISION,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Roof Exclusion' THEN 1 ELSE NULL END) AS ROOF_EXCLUSION,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='FORTIFIED Roof Upgrade' THEN 1 ELSE NULL END) AS FORTIFIED_ROOF_UPGRADE,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Windstorm or Hail Exclusion' THEN 1 ELSE NULL END) AS WIND_HAIL_EXCLUSION,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Mine Subsidence' THEN 1 ELSE NULL END) AS MINE_SUBSIDENCE_OHIO,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Mine Subsidence - Dwelling' THEN 1 ELSE NULL END) AS MINE_SUBSIDENCE_INDIANA_DWELLING,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Mine Subsidence - Other Structures' THEN 1 ELSE NULL END) AS MINE_SUBSIDENCE_INDIANA_OTHER_STRUCTURES,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Mine Subsidence - Additional Living Expense' THEN 1 ELSE NULL END) AS MINE_SUBSIDENCE_INDIANA_ADDITIONAL_LIVING_EXPENSE,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Mine Subsidence - Dwelling and Unscheduled Other Structures (IL)' THEN 1 ELSE NULL END) AS MINE_SUBSIDENCE_ILLINOIS_DWELLING,
			count(DISTINCT CASE WHEN A.PERIL_NAME ='Mine Subsidence - Other Structures - Scheduled (IL)' THEN 1 ELSE NULL END) AS MINE_SUBSIDENCE_ILLINOIS_OTHER_STRUCTURES
		FROM {{ ref('PERIL_CHARACTERISTICS_FIELDS_FLATTEN_STAGE1') }} a
		LEFT JOIN MYSQL_DATA_MART_10001.PERIL_CHARACTERISTICS B 
		ON a.PERIL_CHARACTERISTICS_LOCATOR =b."LOCATOR"
		LEFT JOIN {{ ref('EXPOSURE_CHARACTERISTICS_FIELDS_FLATTEN') }} ecff
		ON a.EXPOSURE_CHARACTERISTICS_LOCATOR =ecff.EXPOSURE_CHARACTERISTICS_LOCATOR 
		LEFT JOIN (
			SELECT 
				EX_TEMP.POLICY_LOCATOR,
				UNIT_ID,
				min(EXPOSURE_LOCATOR) AS ex_locator_unit1,
				MIN(ex_temp.EXPOSURE_CHARACTERISTICS_LOCATOR) AS EXPOSURE_CHARACTERISTICS_LOCATOR_unit1
			FROM {{ ref('EXPOSURE_CHARACTERISTICS_FIELDS_FLATTEN') }} ex_temp 
			WHERE UNIT_ID = '000001'
--			AND POLICY_LOCATOR ='102184568'
			GROUP BY 1,2
		) locator_unit1
		ON locator_unit1.POLICY_LOCATOR=a.POLICY_LOCATOR 
		WHERE b.REPLACED_TIMESTAMP IS NULL
		AND CURRENT_DATE() BETWEEN Date(convert_timezone('America/New_York', to_timestamp_tz(b.START_TIMESTAMP/1000))) AND Date(convert_timezone('America/New_York', to_timestamp_tz(b.END_TIMESTAMP /1000)))
		GROUP BY 1,2,3,4
	) X